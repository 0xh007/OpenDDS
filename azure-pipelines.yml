jobs:
- job: VisualStudio2017
  timeoutInMinutes: 90
  pool:
    vmImage: vs2017-win2016
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
        vcpkgarch: x64-windows
        vcpkglibdir: debug\lib
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
        vcpkgarch: x64-windows
        vcpkglibdir: lib
      Debug32:
        BuildPlatform: Win32
        BuildConfiguration: Debug
        vcpkgarch: x86-windows
        vcpkglibdir: debug\lib
      Release32:
        BuildPlatform: Win32
        BuildConfiguration: Release
        vcpkgarch: x86-windows
        vcpkglibdir: lib
  variables:
    XERCESCROOT: $(Build.SourcesDirectory)\vcpkg\packages\xerces-c_$(vcpkgarch)
    SSL_ROOT: $(Build.SourcesDirectory)\vcpkg\packages\openssl-windows_$(vcpkgarch)
    SSL_LIBDIR: $(SSL_ROOT)\$(vcpkglibdir)
    XERCESC_LIBDIR: $(XERCESCROOT)\$(vcpkglibdir)
  steps:
  - powershell: git clone --depth 1 git://github.com/Microsoft/vcpkg.git $(Build.SourcesDirectory)\vcpkg
    displayName: git clone vcpkg
  - script: .\vcpkg\bootstrap-vcpkg.bat
    displayName: Bootstrap vcpkg
  - script: .\vcpkg\vcpkg.exe install --recurse --triplet $(vcpkgarch) openssl xerces-c
    displayName: vcpkg install dependencies
  - task: BatchScript@1
    displayName: VcVars
    inputs:
      filename: '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
      modifyEnvironment: true
  - script: |
      if %BuildConfiguration%==Release set OPT=--no-tests
      call configure -v --ace-github-latest %OPT%
      if %BuildConfiguration%==Release (set SLN=DDS_TAOv2.sln) else set SLN=DDS_TAOv2_all.sln
      echo ##vso[task.setvariable variable=BuildSolution]%SLN%
    displayName: Run configure script
  - task: BatchScript@1
    displayName: Setenv from configure script
    inputs:
      filename: setenv.cmd
      modifyEnvironment: true
  - task: VSBuild@1
    displayName: Build solution
    inputs:
      solution: $(BuildSolution)
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      maximumCpuCount: true

- job: Linux
  timeoutInMinutes: 90
  pool:
    vmImage: ubuntu-16.04
  strategy:
    maxParallel: 4
    matrix:
      Debug:
        ConfigOpts: --no-inline
      Release:
        ConfigOpts: --no-debug --optimize
      Safety:
        ConfigOpts: --safety-profile
      SafetyBaseNoBuiltinTopics:
        ConfigOpts: --safety-profile=base --no-built-in-topics
      SecurityWithoutFeatures:
        ConfigOpts: --no-inline --no-debug --no-built-in-topics --no-content-subscription --no-ownership-profile --no-object-model-profile --no-persistence-profile --security
        PackageDeps: libxerces-c-dev libssl-dev cmake

  steps:
  - script: sudo apt-get --yes update && sudo apt-get --yes install $(PackageDeps)
    displayName: install system package dependencies ($(PackageDeps))
    condition: and(succeeded(), ne(variables['PackageDeps'], ''))
  - script: ./configure -v --ace-github-latest $(ConfigOpts)
    displayName: Run configure script
  - script: make -sj6
    displayName: Compile

- job: macOS
  timeoutInMinutes: 90
  pool:
    vmImage: macOS-10.13
  strategy:
    maxParallel: 2
    matrix:
      Debug:
        ConfigOpts: --no-inline
      Release:
        ConfigOpts: --no-debug --optimize
  steps:
  - script: ./configure -v --ace-github-latest $(ConfigOpts)
    displayName: Run configure script
  - script: make -sj6
    displayName: Compile
