#include <tao/LongSeq.pidl>
#include <tao/ShortSeq.pidl>
#include <tao/OctetSeq.pidl>

#include <xcdrbasetypes.idl>

// Appendable Tests ==========================================================

typedef AppendableStruct NestedStruct;

@appendable
struct AppendableWithNestedStruct {
  NestedStruct nested;
  COMMON_FIELDS
};

@appendable
struct AdditionalFieldNestedStruct {
  COMMON_FIELDS
  long additional_field;
};

@appendable
struct AdditionalFieldAppendableStruct {
  AdditionalFieldNestedStruct nested;
  COMMON_FIELDS
  long additional_field;
};

@appendable
struct AppendableWithNestedStruct2 {
  string string_field;
  NestedStruct nested;
};

@appendable
union AppendableUnion switch (UnionDisc) {
  COMMON_BRANCHES
};

@appendable
union ModifiedAppendableUnion switch (UnionDisc) {
  COMMON_BRANCHES
case E_ADDITIONAL_FIELD:
  long additional_field;
};


// Mutable Tests =============================================================

@mutable
union MutableUnionWithExplicitIDs switch (UnionDisc) {
case E_SHORT_FIELD:
  @id(4) short short_field;
case E_LONG_FIELD:
  @id(6) long long_field;
case E_OCTET_FIELD:
  @id(8) octet octet_field;
case E_LONG_LONG_FIELD:
  @id(10) long long long_long_field;
};

@mutable
union ModifiedMutableUnion switch (UnionDisc) {
case E_LONG_FIELD:
  @id(6) long long_field;
case E_SHORT_FIELD:
  @id(4) short short_field;
case E_ADDITIONAL_FIELD:
  @id(12) long additional_field;
};

// Mixed Extensibility Tests =================================================

@final
struct NestingFinalStruct {
  string string_field;
  AppendableStruct appendable_nested;
  sequence<short> sequence_field;
  MutableStruct mutable_nested;
};

@appendable
struct NestingAppendableStruct {
  string string_field;
  MutableStruct mutable_nested;
  sequence<long> sequence_field;
  FinalStruct final_nested;
};

@mutable
struct NestingMutableStruct {
  string string_field;
  AppendableStruct appendable_nested;
  sequence<octet> sequence_field;
  FinalStruct final_nested;
};
