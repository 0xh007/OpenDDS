project(*DataSampleHeader): dcps_test, googletest {
  exename = *
  Source_Files {
    DataSampleHeader.cpp
  }
}

project(*DisjointSequence): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    DisjointSequence.cpp
  }
}

project(*DomainParticipantImpl) : dcps_rtpsexe, dcps_test {
  exename   = *

  Source_Files {
    DomainParticipantImpl.cpp
  }
}

project(*GuidGenerator): dcps_rtpsexe, dcps_test {
  exename   = *

  Source_Files {
    GuidGenerator.cpp
  }
}

project(*GuidUtils): dcps_test, googletest {
  exename = *
  Source_Files {
    GuidUtils.cpp
  }
}

project(*JsonValueWriter): dcps_test, googletest, rapidjson {
  exename = *
  Source_Files {
    JsonValueWriter.cpp
  }
}

project(*JsonValueReader): dcps_test, googletest, rapidjson {
  exename = *
  Source_Files {
    JsonValueReader.cpp
  }
}

project(*NetworkConfigModifier): dcps_test, googletest {
  exename = *
  Source_Files {
    NetworkConfigModifier.cpp
  }
}

project(*Qos_Helper): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    Qos_Helper.cpp
  }
}

project(*SafetyProfilePool) : dcps, opendds_face, dcps_test {
  avoids      += no_opendds_safety_profile
  Source_Files {
    SafetyProfilePool.cpp
  }
}

project(*SequenceNumber): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    SequenceNumber.cpp
  }
}

project(*Serializer): dcps_test, googletest {
  exename = *
  Source_Files {
    Serializer.cpp
  }
}

project(*Time_Helper): dcpsexe, dcps_test {
  exename   = *

  Source_Files {
    Time_Helper.cpp
  }
}
