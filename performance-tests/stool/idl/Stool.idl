#include "Builder.idl"

module Stool {

  struct UniqueId {
    unsigned long long high;
    unsigned long long low;
  };

  typedef sequence<octet> OctetSeq;

// ---
// Data Section
// ---

#pragma DCPS_DATA_TYPE "Stool::Data"
#pragma DCPS_DATA_KEY  "Stool::Data id.high"
#pragma DCPS_DATA_KEY  "Stool::Data id.low"
  struct Data {
    UniqueId id;
    Builder::TimeStamp created_time;
    Builder::TimeStamp sent_time;
    OctetSeq buffer;
  };

// ---
// Action Section
// ---

  struct ActionConfig {
    string name;
    string type;
    Builder::PropertySeq params;
    Builder::StringSeq readers;
    Builder::StringSeq writers;
  };

  typedef sequence<ActionConfig> ActionConfigSeq;

  struct ActionReport {
    Builder::PropertySeq properties;
  };

  typedef sequence<ActionReport> ActionReportSeq;

// ---
// Worker Section
// ---

  struct WorkerConfig {
    Builder::TimeStamp enable_time;
    Builder::TimeStamp start_time;
    Builder::TimeStamp stop_time;
    Builder::ProcessConfig process;
    ActionConfigSeq actions;
    ActionReportSeq action_reports;
  };

  struct WorkerReport {
    Builder::TimeStamp construction_time;
    Builder::TimeStamp enable_time;
    Builder::TimeStamp start_time;
    Builder::TimeStamp stop_time;
    Builder::TimeStamp destruction_time;
    unsigned long undermatched_readers;
    unsigned long undermatched_writers;
    Builder::TimeStamp max_discovery_time_delta;
    unsigned long long latency_sample_count;
    double latency_min;
    double latency_max;
    double latency_mean;
    double latency_var_x_sample_count;
    double latency_stdev;
    unsigned long long jitter_sample_count;
    double jitter_min;
    double jitter_max;
    double jitter_mean;
    double jitter_var_x_sample_count;
    double jitter_stdev;
  };

};

