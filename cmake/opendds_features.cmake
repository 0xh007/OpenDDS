if(DEFINED _OPENDDS_ALL_FEATURES)
  return()
endif()

set(_OPENDDS_ALL_FEATURES)
set(_OPENDDS_FEATURE_VARS)
set(_OPENDDS_MPC_FEATURES)
function(_opendds_feature name default_value)
  set(no_value_options MPC MPC_INVERTED)
  set(single_value_options MPC_NAME)
  set(multi_value_options)
  cmake_parse_arguments(arg
    "${no_value_options}" "${single_value_options}" "${multi_value_options}" ${ARGN})

  string(TOLOWER "${name}" lowercase_name)
  list(APPEND _OPENDDS_ALL_FEATURES "${lowercase_name}")
  set(name "OPENDDS_${name}")
  if(NOT DEFINED "${name}")
    set("${name}" "${default_value}" CACHE INTERNAL "")
  endif()
  list(APPEND _OPENDDS_FEATURE_VARS "${name}")
  if(arg_MPC OR arg_MPC_INVERTED)
    if(NOT DEFINED arg_MPC_NAME)
      set(arg_MPC_NAME "${lowercase_name}")
    endif()
    if(arg_MPC_INVERTED)
      set(mpc_true 0)
      set(mpc_false 1)
    else()
      set(mpc_true 1)
      set(mpc_false 0)
    endif()
    if(${${name}})
      set(mpc_feature "${arg_MPC_NAME}=${mpc_true}")
    else()
      set(mpc_feature "${arg_MPC_NAME}=${mpc_false}")
    endif()
    list(APPEND _OPENDDS_MPC_FEATURES "${mpc_feature}")
  endif()

  set(_OPENDDS_ALL_FEATURES "${_OPENDDS_ALL_FEATURES}" CACHE INTERNAL "" FORCE)
  set(_OPENDDS_FEATURE_VARS "${_OPENDDS_FEATURE_VARS}" CACHE INTERNAL "" FORCE)
  set(_OPENDDS_MPC_FEATURES "${_OPENDDS_MPC_FEATURES}" CACHE INTERNAL "" FORCE)
endfunction()

# OpenDDS Features
_opendds_feature(BUILT_IN_TOPICS ON)
_opendds_feature(OBJECT_MODEL_PROFILE ON)
_opendds_feature(PERSISTENCE_PROFILE ON)
_opendds_feature(OWNERSHIP_PROFILE ON)
_opendds_feature(OWNERSHIP_KIND_EXCLUSIVE ${OPENDDS_OWNERSHIP_PROFILE})
_opendds_feature(CONTENT_SUBSCRIPTION ON)
_opendds_feature(CONTENT_FILTERED_TOPIC ${OPENDDS_CONTENT_SUBSCRIPTION})
_opendds_feature(MULTI_TOPIC ${OPENDDS_CONTENT_SUBSCRIPTION})
_opendds_feature(QUERY_CONDITION ${OPENDDS_CONTENT_SUBSCRIPTION})
_opendds_feature(SUPPRESS_ANYS ON)
_opendds_feature(SECURITY OFF)
_opendds_feature(SAFETY_PROFILE OFF)

# ACE Features
if(NOT CMAKE_BUILD_TYPE OR CMAKE_BUILD_TYPE STREQUAL "Debug")
  _opendds_feature(DEBUG ON MPC)
  _opendds_feature(OPTIMIZE OFF MPC)
else()
  _opendds_feature(DEBUG OFF MPC)
  _opendds_feature(OPTIMIZE ON MPC)
endif()
_opendds_feature(INLINE ON MPC)
if(BUILD_SHARED_LIBS)
  _opendds_feature(STATIC OFF MPC)
else()
  _opendds_feature(STATIC ON MPC)
endif()
_opendds_feature(XERCES3 ${OPENDDS_SECURITY} MPC)

# TAO Features
_opendds_feature(TAO_IIOP ON MPC_INVERTED MPC_NAME tao_no_iiop)
_opendds_feature(TAO_OPTIMIZE_COLLOCATED_INVOCATIONS ON MPC)
