project(OpenDDS_Security): dcpslib, dcps_rtps, dds_openssl, ace_xml_utils, install, dds_versioning_idl_defaults {
  idlflags += -Wb,export_macro=DdsSecurity_Export -Wb,export_include=DdsSecurity_Export.h -SS
  dcps_ts_flags += -Wb,export_macro=DdsSecurity_Export -Wb,export_include=DdsSecurity_Export.h
  requires += no_opendds_safety_profile
  avoids += no_opendds_security
  dynamicflags = DDSSECURITY_BUILD_DLL

  IDL_Files {
    CryptoBuiltIn.idl
  }

  TypeSupport_Files {
    CryptoBuiltIn.idl
  }

  Source_Files {
    .
    SSL
    Authentication
    AccessControl
  }

  specific {
    install_dir = dds/DCPS/security
  }

  // Android preloads the system SSL library (either OpenSSL or BoringSSL) for
  // the Java Android API, so we must:
  //   1. Statically link OpenSSL to this library
  //   2. Keep our OpenSSL symbols internal
  // Number 1 is described in android.md
  // We are doing number 2 here.
  verbatim (gnuace, top) {
    comma := ,
    exclude_openssl_libs := -Wl$(comma)--exclude-libs$(comma)libcrypto.a -Wl$(comma)--exclude-libs$(comma)libssl.a
  }
  specific (gnuace) {
    compile_flags += $(if $(ANDROID_ABI),$(exclude_openssl_libs))
  }
}
