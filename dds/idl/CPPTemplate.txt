<%TYPE%>TypeSupportImpl::<%TYPE%>TypeSupportImpl ()
{
}

<%TYPE%>TypeSupportImpl::~<%TYPE%>TypeSupportImpl ()
{
}

::DDS::DataWriter_ptr
<%TYPE%>TypeSupportImpl::create_datawriter ()
{
  <%TYPE%>DataWriterImpl* writer_impl;
  ACE_NEW_RETURN(writer_impl,
                 <%TYPE%>DataWriterImpl(),
                 ::DDS::DataWriter::_nil());

  return writer_impl;
}

::DDS::DataReader_ptr
<%TYPE%>TypeSupportImpl::create_datareader ()
{
  <%TYPE%>DataReaderImpl* reader_impl = 0;
  ACE_NEW_RETURN(reader_impl,
                 <%TYPE%>DataReaderImpl(),
                 ::DDS::DataReader::_nil());

  return reader_impl;
}

#ifndef OPENDDS_NO_MULTI_TOPIC
::DDS::DataReader_ptr
<%TYPE%>TypeSupportImpl::create_multitopic_datareader()
{
  return new OpenDDS::DCPS::MultiTopicDataReader_T<<%TYPE%>,
    <%TYPE%>DataReaderImpl>;
}
#endif

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE

const OpenDDS::DCPS::MetaStruct&
<%TYPE%>TypeSupportImpl::getMetaStructForType()
{
  return OpenDDS::DCPS::getMetaStruct<<%TYPE%>>();
}

#endif

bool
<%TYPE%>TypeSupportImpl::has_dcps_key()
{
  return OpenDDS::DCPS::gen_has_key(<%TYPE%>());
}
